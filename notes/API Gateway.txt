API Gateway - stores url and ports of all your microservices. Serves as middleware from client to microservices
			- it will check the application name from application.properties file to the service-registry
	1. Route Request
	2. Load Balancing
	3. Security
	
Development Setup
1. Create springboot miscroservice (api-gateway)
2. Register as eureka client to eureka server (service registry)
3. Configure api gateway routes and test using postman
	server.port=9191
	spring.application.name=API-GATEWAY
	eureka.instance.client.serverUrl.defaultZone=http://http://localhost:8761/eureka/

	management.endpoints.web.exposure.include=*

	#Routes for Employee Service
	spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE
	#spring.cloud.gateway.routes[0].uri=http://localhost:8081
	spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
	spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**

	#Routes for Department Service
	spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE
	#spring.cloud.gateway.routes[1].uri=http://localhost:8080
	spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
	spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**


	#Zipkin
	spring.zipkin.base-url=http://127.0.0.1:9411/
	spring.sleuth.sampler.probability=1.0